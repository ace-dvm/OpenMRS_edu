OpenMRS build process on test server

based on:
https://wiki.openmrs.org/display/docs/Installing+OpenMRS
https://openmrs.org/download/
https://talk.openmrs.org/t/mysqldump-for-reference-application-database/33468/8
https://talk.openmrs.org/t/failed-to-import-lab-orderables/33509/3

I am installing Platform 2.4.0 with the following modules:
addresshierarchy-2.14.2.omod
coreapps-1.31.0.omod
legacyui-1.8.0.omod
registrationcore-1.10.0.omod
adminui-1.4.0.omod
dataexchange-1.3.6.omod
metadatadeploy-1.12.1.omod
reporting-1.21.0.omod
allergyui-1.8.3.omod
dependencies.txt
metadatamapping-1.3.5.omod
reportingcompatibility-2.0.7.omod
appframework-2.16.0.omod
emrapi-1.30.0.omod
metadatasharing-1.7.0.omod
reportingrest-1.11.0.omod
appointmentscheduling-1.13.0.omod
event-2.8.0.omod
orderentryui-1.1.0.omod
reportingui-1.7.0.omod
appointmentschedulingui-1.9.0.omod
fhir2-1.1.0.omod
owa-1.12.0.omod
serialization.xstream-0.2.14.omod
appui-1.13.0.omod
formentryapp-1.4.2.omod
providermanagement-2.12.0.omod
uicommons-2.15.0.omod
ardenreminders-1.0.0-SNAPSHOT.omod
htmlformentry-3.12.0.omod
referenceapplication-2.11.0.omod
uiframework-3.19.0.omod
atlas-2.2.4.omod
htmlformentryui-1.11.2.omod
referencedemodata-1.4.6.omod
uilibrary-2.0.6.omod
attachments-2.4.0.omod
htmlwidgets-1.10.0.omod
referencemetadata-2.11.0.omod
webservices.rest-2.29.0.omod
calculation-1.2.1.omod
idgen-4.6.0.omod
registrationapp-1.20.0.omod

OWAs:
addonmanager  
conceptdictionary  
metadatamapping  
orderentry  
SystemAdministration

---------------------------------------

Install tomcat. Check that it is running (service tomcat status) and then stop it (service tomcat stop).
Download the openmrs.war file and put it in $CATALINA_HOME (/opt/tomcat/webapps/
Start tomcat, navigate to http://localhost:8080/openmrs/ and run the installer.
(if you are not running on localhost, put your url instead of localhost)

Make sure you specify the correct connection string for the database. On my system this was:
jdbc:mysql://localhost/openmrs?autoReconnect=true&sessionVariables=default_storage_engine=InnoDB&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
but your system might be different.
Skip the implementation ID; having one seems to cause the installer to fail. :(

// If it won't correctly create the database user, log into the db:
  mysql -u root -p
  (enter the root password when prompted)
  then:
  CREATE USER 'admin'@'%' IDENTIFIED BY 'password';
  GRANT ALL PRIVILEGES ON * . * TO 'admin'@'%';
  FLUSH PRIVILEGES;
  (change the word password to a sensible password).

// If it won't correctly create the database, then:
  create database openmrs;
  ALTER DATABASE openmrs CHARACTER SET utf8 COLLATE utf8_unicode_ci;

The installer should create directory named openmrs with a folder /modules/ and /owa/ inside it. If the installer fails to create these folders, find the openmrs-runtime.properties file and create these folders in the same directory as that file. Chown them to the openmrs/tomcat user (or chmod 777 them).

After the installer has run successfully once, stop Tomcat and copy ALL of the .omod files into /modules/ and chown them to tomcat. 
Place the owa zip files in the /owa/ directory, make sure they are chown'd to the openmrs/tomcat user (or chmod 777 them).
Restart tomcat. It will take a while to restart.

There is a bug in the reporting module where it specifies mysql, but should say mysql or mariadb. (See https://talk.openmrs.org/t/unable-to-install-module-reporting/33293/27 ). If you are running MariaDB, you will get a login screen with the old UI, and the module manager will show that Reporting is not running. If you encounter this problem:
   Stop tomcat.
   Log into the database and run
   ALTER TABLE reporting_report_design ADD COLUMN report_definition_uuid char(38);
   Start tomcat.


Follow instructions for configuring order entry:
https://wiki.openmrs.org/display/projects/Order+Entry+UI+Administrator+Guide 

The instructions given did not work for importing the lab orderables; see the insertLabOrderables file in this repo for instructions on how to get lab orderables.

Set the Global Property referencedemodata.createDemoPatientsOnNextStartup to the number of fake patients that are wanted.
Restart tomcat.
